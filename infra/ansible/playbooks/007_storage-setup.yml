---
- name: Proxmox Storage Configuration
  hosts: proxmox
  gather_facts: true
  become: true
  vars_files:
    - ../group_vars/all/main.yml
    - ../group_vars/all/vault.yml
  
  tags:
    - storage
    - pve
  
  tasks:
    - name: Get existing storage configurations
      command: pvesm status
      register: existing_storage
      changed_when: false
      check_mode: no
    
    - name: Parse existing storage
      set_fact:
        existing_storage_names: "{{ existing_storage.stdout_lines | select('match', '^[a-zA-Z0-9_-]+\\s+') | map('regex_replace', '^([a-zA-Z0-9_-]+)\\s+.*', '\\1') | list }}"
    
    - name: Configure directory storage
      command: |
        pvesm add dir {{ item.name }} \
          --path {{ item.path }} \
          --content {{ item.content }}
      when: 
        - item.type == 'dir'
        - item.name not in existing_storage_names
      loop: "{{ pve_storages }}"
      register: dir_storage_result
      changed_when: dir_storage_result.rc == 0
      failed_when: 
        - dir_storage_result.rc != 0
        - "'already exists' not in dir_storage_result.stderr"
    
    - name: Configure ZFS storage
      command: |
        pvesm add zfspool {{ item.name }} \
          --pool {{ item.pool }} \
          --content {{ item.content }}
      when: 
        - item.type == 'zfspool'
        - item.name not in existing_storage_names
      loop: "{{ pve_storages }}"
      register: zfs_storage_result
      changed_when: zfs_storage_result.rc == 0
      failed_when: 
        - zfs_storage_result.rc != 0
        - "'already exists' not in zfs_storage_result.stderr"
    
    - name: Configure LVM-thin storage
      command: |
        pvesm add lvmthin {{ item.name }} \
          --vgname {{ item.vgname }} \
          --thinpool {{ item.thinpool }} \
          --content {{ item.content }}
      when: 
        - item.type == 'lvmthin'
        - item.name not in existing_storage_names
      loop: "{{ pve_storages }}"
      register: lvm_storage_result
      changed_when: lvm_storage_result.rc == 0
      failed_when: 
        - lvm_storage_result.rc != 0
        - "'already exists' not in lvm_storage_result.stderr"
    
    - name: Configure PBS storage
      command: |
        pvesm add pbs {{ item.name }} \
          --server {{ item.server }} \
          --datastore {{ item.datastore }} \
          --username {{ item.username }} \
          --fingerprint "{{ item.fingerprint }}"
      when: 
        - item.type == 'pbs'
        - item.name not in existing_storage_names
      loop: "{{ pve_storages }}"
      register: pbs_storage_result
      changed_when: pbs_storage_result.rc == 0
      failed_when: 
        - pbs_storage_result.rc != 0
        - "'already exists' not in pbs_storage_result.stderr"
      no_log: true
    
    - name: Check storage status
      command: pvesm status {{ item.name }}
      loop: "{{ pve_storages }}"
      register: storage_status
      changed_when: false
      failed_when: false
    
    - name: Enable storage if disabled
      command: pvesm set {{ item.0.name }} --disable 0
      when: "'disabled' in item.1.stderr | default('')"
      loop: "{{ pve_storages | zip(storage_status.results) | list }}"
      register: enable_result
      changed_when: enable_result.rc == 0