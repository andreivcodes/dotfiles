---
# Reusable Tailscale ACL Management Tasks
# 
# Required variables:
#   - tailscale_api_token: API token for Tailscale
#   - acl_tag_name: The tag name to manage (e.g., "proposalsapp-infra")
#   - acl_ports: List of ports to allow (e.g., [3000, 80, 443, 22])
#   - acl_tag_owners: Tag owners (defaults to ['autogroup:admin'])
#
# This task file will:
# 1. Get current ACL policy
# 2. Add new rules without removing existing ones
# 3. Merge tag owners without overwriting
# 4. Update the ACL policy atomically

- name: Get current Tailscale ACL policy
  uri:
    url: "https://api.tailscale.com/api/v2/tailnet/-/acl"
    method: GET
    headers:
      Authorization: "Bearer {{ tailscale_api_token }}"
      Accept: application/json
    return_content: yes
    status_code: 200
  register: current_acl
  delegate_to: localhost
  become: false
  when: tailscale_api_token is defined and (tailscale_api_token | length) > 0

- name: Build port destinations for the tag
  set_fact:
    tag_destinations: "{{ acl_ports | map('regex_replace', '^(.*)$', 'tag:' + acl_tag_name + ':\\1') | list }}"

- name: Build new ACL rules for this tag
  set_fact:
    new_tag_rules:
      - action: accept
        src: ["*"]
        dst: "{{ tag_destinations }}"
      - action: accept
        src: ["tag:{{ acl_tag_name }}"]
        dst: ["*:*"]

- name: Remove old rules for this tag and add new ones
  set_fact:
    merged_acls: >-
      {{
        ((current_acl.json.acls | default([]))
        | rejectattr('dst', 'match', '.*tag:' + acl_tag_name + ':.*')
        | rejectattr('src', 'match', '.*tag:' + acl_tag_name + '.*')
        | list)
        +
        new_tag_rules
      }}
  when: current_acl is defined

- name: Merge tag owners (keep existing, add new)
  set_fact:
    merged_tag_owners: >-
      {{
        (current_acl.json.tagOwners | default({}))
        | combine({('tag:' + acl_tag_name): (acl_tag_owners | default(['autogroup:admin']))})
      }}
  when: current_acl is defined

- name: Debug merged ACLs (optional)
  debug:
    msg:
      - "Tag: {{ acl_tag_name }}"
      - "Ports: {{ acl_ports }}"
      - "Number of existing ACL rules: {{ (current_acl.json.acls | default([])) | length }}"
      - "Number of rules after merge: {{ merged_acls | length }}"
    verbosity: 1
  when: current_acl is defined

- name: Update Tailscale ACL policy with merged rules
  uri:
    url: "https://api.tailscale.com/api/v2/tailnet/-/acl"
    method: POST
    headers:
      Authorization: "Bearer {{ tailscale_api_token }}"
      Content-Type: application/json
      Accept: application/json
      If-Match: "{{ current_acl.etag | default('') }}"
    body_format: json
    body:
      acls: "{{ merged_acls }}"
      tagOwners: "{{ merged_tag_owners }}"
      # Preserve other ACL fields if they exist
      groups: "{{ current_acl.json.groups | default(omit) }}"
      hosts: "{{ current_acl.json.hosts | default(omit) }}"
      autoApprovers: "{{ current_acl.json.autoApprovers | default(omit) }}"
      ssh: "{{ current_acl.json.ssh | default(omit) }}"
      nodeAttrs: "{{ current_acl.json.nodeAttrs | default(omit) }}"
    return_content: yes
    status_code: [200, 201]
  register: ts_acl_update
  delegate_to: localhost
  become: false
  changed_when: ts_acl_update.status in [200, 201]
  when: 
    - tailscale_api_token is defined 
    - (tailscale_api_token | length) > 0 
    - current_acl is defined

- name: Report ACL update status
  debug:
    msg: "ACL rules for tag:{{ acl_tag_name }} have been updated successfully"
  when: ts_acl_update is defined and ts_acl_update.changed